/**
 * @fileoverview added by tsickle
 * Generated from: ngt-universal/window.service.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable, Inject, PLATFORM_ID } from '@angular/core';
import { isPlatformBrowser } from '@angular/common';
export class WindowService {
    /**
     * @param {?} platformId
     */
    constructor(platformId) {
        if (!isPlatformBrowser(platformId)) {
            // const req: any = this.injector.get(this.injector.get(USERAGENTTOKEN));
            // this._window = {navigator: {userAgent: req.get('User-Agent')}};
            this._window = (/** @type {?} */ ({ navigator: { userAgent: 'fakeAgent' } }));
        }
        else {
            this._window = window;
        }
    }
    /**
     * @return {?}
     */
    get nativeWindow() {
        return this._window;
    }
}
WindowService.decorators = [
    { type: Injectable }
];
/** @nocollapse */
WindowService.ctorParameters = () => [
    { type: undefined, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] }
];
if (false) {
    /**
     * @type {?}
     * @private
     */
    WindowService.prototype._window;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2luZG93LnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AbmctdG9vbGtpdC91bml2ZXJzYWwvIiwic291cmNlcyI6WyJuZ3QtdW5pdmVyc2FsL3dpbmRvdy5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLEVBQUUsV0FBVyxFQUFrQixNQUFNLGVBQWUsQ0FBQztBQUNoRixPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUdwRCxNQUFNLE9BQU8sYUFBYTs7OztJQUV0QixZQUFpQyxVQUFlO1FBQzVDLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxVQUFVLENBQUMsRUFBRTtZQUNoQyx5RUFBeUU7WUFDekUsa0VBQWtFO1lBQ2xFLElBQUksQ0FBQyxPQUFPLEdBQUcsbUJBQUEsRUFBQyxTQUFTLEVBQUUsRUFBQyxTQUFTLEVBQUUsV0FBVyxFQUFDLEVBQUMsRUFBVSxDQUFDO1NBQ2xFO2FBQU07WUFDSCxJQUFJLENBQUMsT0FBTyxHQUFHLE1BQU0sQ0FBQztTQUN6QjtJQUNMLENBQUM7Ozs7SUFFRCxJQUFJLFlBQVk7UUFDWixPQUFPLElBQUksQ0FBQyxPQUFPLENBQUM7SUFDeEIsQ0FBQzs7O1lBZkosVUFBVTs7Ozs0Q0FHTSxNQUFNLFNBQUMsV0FBVzs7Ozs7OztJQUQvQixnQ0FBd0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlLCBJbmplY3QsIFBMQVRGT1JNX0lELCBJbmplY3Rpb25Ub2tlbiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgaXNQbGF0Zm9ybUJyb3dzZXIgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgV2luZG93U2VydmljZSB7XG4gICAgcHJpdmF0ZSBfd2luZG93OiBXaW5kb3c7XG4gICAgY29uc3RydWN0b3IoQEluamVjdChQTEFURk9STV9JRCkgcGxhdGZvcm1JZDogYW55KSB7XG4gICAgICAgIGlmICghaXNQbGF0Zm9ybUJyb3dzZXIocGxhdGZvcm1JZCkpIHtcbiAgICAgICAgICAgIC8vIGNvbnN0IHJlcTogYW55ID0gdGhpcy5pbmplY3Rvci5nZXQodGhpcy5pbmplY3Rvci5nZXQoVVNFUkFHRU5UVE9LRU4pKTtcbiAgICAgICAgICAgIC8vIHRoaXMuX3dpbmRvdyA9IHtuYXZpZ2F0b3I6IHt1c2VyQWdlbnQ6IHJlcS5nZXQoJ1VzZXItQWdlbnQnKX19O1xuICAgICAgICAgICAgdGhpcy5fd2luZG93ID0ge25hdmlnYXRvcjoge3VzZXJBZ2VudDogJ2Zha2VBZ2VudCd9fSBhcyBXaW5kb3c7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aGlzLl93aW5kb3cgPSB3aW5kb3c7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBnZXQgbmF0aXZlV2luZG93KCk6IGFueSB7XG4gICAgICAgIHJldHVybiB0aGlzLl93aW5kb3c7XG4gICAgfVxufVxuIl19