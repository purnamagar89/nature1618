/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { Injectable, Inject, PLATFORM_ID } from '@angular/core';
import { isPlatformBrowser } from '@angular/common';
var LocalStorageWrapper = /** @class */ (function () {
    function LocalStorageWrapper(platformId) {
        if (isPlatformBrowser(platformId)) {
            this.localStorageRef = localStorage;
        }
        else {
            this.localStorageRef = {
                clear: function () {
                    /*noop*/ 
                },
                getItem: function (key) { return (undefined); },
                key: function (index) { return (undefined); },
                removeItem: function (key) {
                    /*noop*/ 
                },
                setItem: function (key, value) {
                    /*noop*/ 
                },
                length: 0
            };
        }
    }
    Object.defineProperty(LocalStorageWrapper.prototype, "localStorage", {
        get: /**
         * @return {?}
         */
        function () {
            return this.localStorageRef;
        },
        enumerable: true,
        configurable: true
    });
    LocalStorageWrapper.decorators = [
        { type: Injectable },
    ];
    /** @nocollapse */
    LocalStorageWrapper.ctorParameters = function () { return [
        { type: undefined, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] }
    ]; };
    return LocalStorageWrapper;
}());
export { LocalStorageWrapper };
function LocalStorageWrapper_tsickle_Closure_declarations() {
    /** @type {?} */
    LocalStorageWrapper.prototype.localStorageRef;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9jYWwtc3RvcmFnZS13cmFwcGVyLnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AbmctdG9vbGtpdC91bml2ZXJzYWwvIiwic291cmNlcyI6WyJuZ3QtdW5pdmVyc2FsL2xvY2FsLXN0b3JhZ2Utd3JhcHBlci5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sRUFBRSxXQUFXLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDaEUsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0saUJBQWlCLENBQUM7O0lBTWhELDZCQUFpQyxVQUFVO1FBQ3ZDLEVBQUUsQ0FBQyxDQUFDLGlCQUFpQixDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNoQyxJQUFJLENBQUMsZUFBZSxHQUFHLFlBQVksQ0FBQztTQUN2QztRQUFDLElBQUksQ0FBQyxDQUFDO1lBQ0osSUFBSSxDQUFDLGVBQWUsR0FBRztnQkFDdkIsS0FBSyxFQUFFOztpQkFBZ0I7Z0JBQ3ZCLE9BQU8sRUFBRSxVQUFDLEdBQVcsWUFBSyxTQUFtQixJQUFBO2dCQUM3QyxHQUFHLEVBQUUsVUFBQyxLQUFhLFlBQUssU0FBbUIsSUFBQTtnQkFDM0MsVUFBVSxFQUFFLFVBQUMsR0FBVzs7aUJBQWU7Z0JBQ3ZDLE9BQU8sRUFBRSxVQUFDLEdBQVcsRUFBRSxLQUFhOztpQkFBZTtnQkFDbkQsTUFBTSxFQUFFLENBQUM7YUFDUixDQUFDO1NBQ0w7S0FDSjtJQUVELHNCQUFJLDZDQUFZOzs7O1FBQWhCO1lBQ0ksTUFBTSxDQUFDLElBQUksQ0FBQyxlQUFlLENBQUM7U0FDL0I7OztPQUFBOztnQkFyQkosVUFBVTs7OztnREFJTSxNQUFNLFNBQUMsV0FBVzs7OEJBUG5DOztTQUlhLG1CQUFtQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUsIEluamVjdCwgUExBVEZPUk1fSUQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IGlzUGxhdGZvcm1Ccm93c2VyIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIExvY2FsU3RvcmFnZVdyYXBwZXIge1xuICAgIHByaXZhdGUgbG9jYWxTdG9yYWdlUmVmO1xuXG4gICAgY29uc3RydWN0b3IoQEluamVjdChQTEFURk9STV9JRCkgcGxhdGZvcm1JZCkge1xuICAgICAgICBpZiAoaXNQbGF0Zm9ybUJyb3dzZXIocGxhdGZvcm1JZCkpIHtcbiAgICAgICAgICAgIHRoaXMubG9jYWxTdG9yYWdlUmVmID0gbG9jYWxTdG9yYWdlO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5sb2NhbFN0b3JhZ2VSZWYgPSB7XG4gICAgICAgICAgICBjbGVhcjogKCkgPT4gey8qbm9vcCovfSxcbiAgICAgICAgICAgIGdldEl0ZW06IChrZXk6IHN0cmluZykgPT4gdW5kZWZpbmVkIGFzIHN0cmluZyxcbiAgICAgICAgICAgIGtleTogKGluZGV4OiBudW1iZXIpID0+IHVuZGVmaW5lZCBhcyBzdHJpbmcsXG4gICAgICAgICAgICByZW1vdmVJdGVtOiAoa2V5OiBzdHJpbmcpID0+IHsvKm5vb3AqL30sXG4gICAgICAgICAgICBzZXRJdGVtOiAoa2V5OiBzdHJpbmcsIHZhbHVlOiBzdHJpbmcpID0+IHsvKm5vb3AqL30sXG4gICAgICAgICAgICBsZW5ndGg6IDBcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBnZXQgbG9jYWxTdG9yYWdlKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5sb2NhbFN0b3JhZ2VSZWY7XG4gICAgfVxufVxuIl19