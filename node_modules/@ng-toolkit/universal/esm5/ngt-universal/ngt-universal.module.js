/**
 * @fileoverview added by tsickle
 * Generated from: ngt-universal/ngt-universal.module.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule, InjectionToken } from '@angular/core';
import { WindowService } from './window.service';
import { LocalStorageWrapper } from './local-storage-wrapper.service';
import { DocumentService } from './document.service';
export { DocumentService } from './document.service';
/** @type {?} */
export var WINDOW = new InjectionToken('ng-toolkit-window');
/**
 * @param {?} windowService
 * @return {?}
 */
export function windowFactory(windowService) {
    return windowService.nativeWindow;
}
/** @type {?} */
export var LOCAL_STORAGE = new InjectionToken('ng-toolkit-local-storage');
/**
 * @param {?} localStorageWrapper
 * @return {?}
 */
export function localStorageFactory(localStorageWrapper) {
    return localStorageWrapper.localStorage;
}
/** @type {?} */
export var NGT_DOCUMENT = new InjectionToken('ng-toolkit-document');
/**
 * @param {?} documentService
 * @return {?}
 */
export function documentFactory(documentService) {
    console.log('document factory');
    return documentService.nativeDocument;
}
var NgtUniversalModule = /** @class */ (function () {
    function NgtUniversalModule() {
    }
    NgtUniversalModule.decorators = [
        { type: NgModule, args: [{
                    providers: [
                        WindowService,
                        { provide: WINDOW, useFactory: windowFactory, deps: [WindowService] },
                        DocumentService,
                        { provide: NGT_DOCUMENT, useFactory: documentFactory, deps: [DocumentService] },
                        LocalStorageWrapper,
                        { provide: LOCAL_STORAGE, useFactory: localStorageFactory, deps: [LocalStorageWrapper] }
                    ]
                },] }
    ];
    return NgtUniversalModule;
}());
export { NgtUniversalModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd0LXVuaXZlcnNhbC5tb2R1bGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AbmctdG9vbGtpdC91bml2ZXJzYWwvIiwic291cmNlcyI6WyJuZ3QtdW5pdmVyc2FsL25ndC11bml2ZXJzYWwubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxjQUFjLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekQsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBQ2pELE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLGlDQUFpQyxDQUFDO0FBQ3RFLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUVyRCxnQ0FBYyxvQkFBb0IsQ0FBQzs7QUFFbkMsTUFBTSxLQUFPLE1BQU0sR0FBRyxJQUFJLGNBQWMsQ0FBQyxtQkFBbUIsQ0FBQzs7Ozs7QUFFN0QsTUFBTSxVQUFVLGFBQWEsQ0FBQyxhQUE0QjtJQUN0RCxPQUFPLGFBQWEsQ0FBQyxZQUFZLENBQUM7QUFDdEMsQ0FBQzs7QUFFRCxNQUFNLEtBQU8sYUFBYSxHQUFHLElBQUksY0FBYyxDQUFDLDBCQUEwQixDQUFDOzs7OztBQUUzRSxNQUFNLFVBQVUsbUJBQW1CLENBQUMsbUJBQXdDO0lBQ3hFLE9BQU8sbUJBQW1CLENBQUMsWUFBWSxDQUFDO0FBQzVDLENBQUM7O0FBRUQsTUFBTSxLQUFPLFlBQVksR0FBRyxJQUFJLGNBQWMsQ0FBQyxxQkFBcUIsQ0FBQzs7Ozs7QUFFckUsTUFBTSxVQUFVLGVBQWUsQ0FBQyxlQUFnQztJQUM1RCxPQUFPLENBQUMsR0FBRyxDQUFDLGtCQUFrQixDQUFDLENBQUM7SUFDaEMsT0FBTyxlQUFlLENBQUMsY0FBYyxDQUFDO0FBQzFDLENBQUM7QUFFRDtJQUFBO0lBVWlDLENBQUM7O2dCQVZqQyxRQUFRLFNBQUM7b0JBQ04sU0FBUyxFQUFFO3dCQUNQLGFBQWE7d0JBQ2IsRUFBRSxPQUFPLEVBQUUsTUFBTSxFQUFFLFVBQVUsRUFBRSxhQUFhLEVBQUUsSUFBSSxFQUFFLENBQUMsYUFBYSxDQUFDLEVBQUU7d0JBQ3JFLGVBQWU7d0JBQ2YsRUFBRSxPQUFPLEVBQUUsWUFBWSxFQUFFLFVBQVUsRUFBRSxlQUFlLEVBQUUsSUFBSSxFQUFFLENBQUMsZUFBZSxDQUFDLEVBQUU7d0JBQy9FLG1CQUFtQjt3QkFDbkIsRUFBRSxPQUFPLEVBQUUsYUFBYSxFQUFFLFVBQVUsRUFBRSxtQkFBbUIsRUFBRSxJQUFJLEVBQUUsQ0FBQyxtQkFBbUIsQ0FBQyxFQUFFO3FCQUMzRjtpQkFDSjs7SUFDZ0MseUJBQUM7Q0FBQSxBQVZsQyxJQVVrQztTQUFyQixrQkFBa0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSwgSW5qZWN0aW9uVG9rZW4gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFdpbmRvd1NlcnZpY2UgfSBmcm9tICcuL3dpbmRvdy5zZXJ2aWNlJztcbmltcG9ydCB7IExvY2FsU3RvcmFnZVdyYXBwZXIgfSBmcm9tICcuL2xvY2FsLXN0b3JhZ2Utd3JhcHBlci5zZXJ2aWNlJztcbmltcG9ydCB7IERvY3VtZW50U2VydmljZSB9IGZyb20gJy4vZG9jdW1lbnQuc2VydmljZSc7XG5cbmV4cG9ydCAqIGZyb20gJy4vZG9jdW1lbnQuc2VydmljZSc7XG5cbmV4cG9ydCBjb25zdCBXSU5ET1cgPSBuZXcgSW5qZWN0aW9uVG9rZW4oJ25nLXRvb2xraXQtd2luZG93Jyk7XG5cbmV4cG9ydCBmdW5jdGlvbiB3aW5kb3dGYWN0b3J5KHdpbmRvd1NlcnZpY2U6IFdpbmRvd1NlcnZpY2UpIHtcbiAgICByZXR1cm4gd2luZG93U2VydmljZS5uYXRpdmVXaW5kb3c7XG59XG5cbmV4cG9ydCBjb25zdCBMT0NBTF9TVE9SQUdFID0gbmV3IEluamVjdGlvblRva2VuKCduZy10b29sa2l0LWxvY2FsLXN0b3JhZ2UnKTtcblxuZXhwb3J0IGZ1bmN0aW9uIGxvY2FsU3RvcmFnZUZhY3RvcnkobG9jYWxTdG9yYWdlV3JhcHBlcjogTG9jYWxTdG9yYWdlV3JhcHBlcikge1xuICAgIHJldHVybiBsb2NhbFN0b3JhZ2VXcmFwcGVyLmxvY2FsU3RvcmFnZTtcbn1cblxuZXhwb3J0IGNvbnN0IE5HVF9ET0NVTUVOVCA9IG5ldyBJbmplY3Rpb25Ub2tlbignbmctdG9vbGtpdC1kb2N1bWVudCcpO1xuXG5leHBvcnQgZnVuY3Rpb24gZG9jdW1lbnRGYWN0b3J5KGRvY3VtZW50U2VydmljZTogRG9jdW1lbnRTZXJ2aWNlKSB7XG4gICAgY29uc29sZS5sb2coJ2RvY3VtZW50IGZhY3RvcnknKTtcbiAgICByZXR1cm4gZG9jdW1lbnRTZXJ2aWNlLm5hdGl2ZURvY3VtZW50O1xufVxuXG5ATmdNb2R1bGUoe1xuICAgIHByb3ZpZGVyczogW1xuICAgICAgICBXaW5kb3dTZXJ2aWNlLFxuICAgICAgICB7IHByb3ZpZGU6IFdJTkRPVywgdXNlRmFjdG9yeTogd2luZG93RmFjdG9yeSwgZGVwczogW1dpbmRvd1NlcnZpY2VdIH0sXG4gICAgICAgIERvY3VtZW50U2VydmljZSxcbiAgICAgICAgeyBwcm92aWRlOiBOR1RfRE9DVU1FTlQsIHVzZUZhY3Rvcnk6IGRvY3VtZW50RmFjdG9yeSwgZGVwczogW0RvY3VtZW50U2VydmljZV0gfSxcbiAgICAgICAgTG9jYWxTdG9yYWdlV3JhcHBlcixcbiAgICAgICAgeyBwcm92aWRlOiBMT0NBTF9TVE9SQUdFLCB1c2VGYWN0b3J5OiBsb2NhbFN0b3JhZ2VGYWN0b3J5LCBkZXBzOiBbTG9jYWxTdG9yYWdlV3JhcHBlcl0gfVxuICAgIF1cbn0pXG5leHBvcnQgY2xhc3MgTmd0VW5pdmVyc2FsTW9kdWxlIHt9XG4iXX0=