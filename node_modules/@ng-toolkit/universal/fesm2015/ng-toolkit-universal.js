import { Injectable, Inject, PLATFORM_ID, NgModule, InjectionToken } from '@angular/core';
import { isPlatformBrowser } from '@angular/common';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
class WindowService {
    /**
     * @param {?} platformId
     */
    constructor(platformId) {
        if (!isPlatformBrowser(platformId)) {
            // const req: any = this.injector.get(this.injector.get(USERAGENTTOKEN));
            // this._window = {navigator: {userAgent: req.get('User-Agent')}};
            this._window = /** @type {?} */ ({ navigator: { userAgent: 'fakeAgent' } });
        }
        else {
            this._window = window;
        }
    }
    /**
     * @return {?}
     */
    get nativeWindow() {
        return this._window;
    }
}
WindowService.decorators = [
    { type: Injectable },
];
/** @nocollapse */
WindowService.ctorParameters = () => [
    { type: undefined, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] }
];

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
class LocalStorageWrapper {
    /**
     * @param {?} platformId
     */
    constructor(platformId) {
        if (isPlatformBrowser(platformId)) {
            this.localStorageRef = localStorage;
        }
        else {
            this.localStorageRef = {
                clear: () => {
                    /*noop*/ 
                },
                getItem: (key) => /** @type {?} */ (undefined),
                key: (index) => /** @type {?} */ (undefined),
                removeItem: (key) => {
                    /*noop*/ 
                },
                setItem: (key, value) => {
                    /*noop*/ 
                },
                length: 0
            };
        }
    }
    /**
     * @return {?}
     */
    get localStorage() {
        return this.localStorageRef;
    }
}
LocalStorageWrapper.decorators = [
    { type: Injectable },
];
/** @nocollapse */
LocalStorageWrapper.ctorParameters = () => [
    { type: undefined, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] }
];

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
const /** @type {?} */ WINDOW = new InjectionToken('ng-toolkit-window');
/**
 * @param {?} windowService
 * @return {?}
 */
function windowFactory(windowService) {
    return windowService.nativeWindow;
}
const /** @type {?} */ LOCAL_STORAGE = new InjectionToken('ng-toolkit-local-storage');
/**
 * @param {?} localStorageWrapper
 * @return {?}
 */
function localStoragefactory(localStorageWrapper) {
    return localStorageWrapper.localStorage;
}
class NgtUniversalModule {
}
NgtUniversalModule.decorators = [
    { type: NgModule, args: [{
                providers: [
                    WindowService,
                    { provide: WINDOW, useFactory: windowFactory, deps: [WindowService] },
                    LocalStorageWrapper,
                    { provide: LOCAL_STORAGE, useFactory: localStoragefactory, deps: [LocalStorageWrapper] },
                ]
            },] },
];

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

export { WINDOW, windowFactory, LOCAL_STORAGE, localStoragefactory, NgtUniversalModule, LocalStorageWrapper as ɵb, WindowService as ɵa };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmctdG9vbGtpdC11bml2ZXJzYWwuanMubWFwIiwic291cmNlcyI6WyJuZzovL0BuZy10b29sa2l0L3VuaXZlcnNhbC9uZ3QtdW5pdmVyc2FsL3dpbmRvdy5zZXJ2aWNlLnRzIiwibmc6Ly9AbmctdG9vbGtpdC91bml2ZXJzYWwvbmd0LXVuaXZlcnNhbC9sb2NhbC1zdG9yYWdlLXdyYXBwZXIuc2VydmljZS50cyIsIm5nOi8vQG5nLXRvb2xraXQvdW5pdmVyc2FsL25ndC11bml2ZXJzYWwvbmd0LXVuaXZlcnNhbC5tb2R1bGUudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSwgSW5qZWN0LCBQTEFURk9STV9JRCwgSW5qZWN0aW9uVG9rZW4gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IGlzUGxhdGZvcm1Ccm93c2VyIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIFdpbmRvd1NlcnZpY2Uge1xuICAgIHByaXZhdGUgX3dpbmRvdzogV2luZG93O1xuICAgIGNvbnN0cnVjdG9yKEBJbmplY3QoUExBVEZPUk1fSUQpIHBsYXRmb3JtSWQ6IGFueSkge1xuICAgICAgICBpZiAoIWlzUGxhdGZvcm1Ccm93c2VyKHBsYXRmb3JtSWQpKSB7XG4gICAgICAgICAgICAvLyBjb25zdCByZXE6IGFueSA9IHRoaXMuaW5qZWN0b3IuZ2V0KHRoaXMuaW5qZWN0b3IuZ2V0KFVTRVJBR0VOVFRPS0VOKSk7XG4gICAgICAgICAgICAvLyB0aGlzLl93aW5kb3cgPSB7bmF2aWdhdG9yOiB7dXNlckFnZW50OiByZXEuZ2V0KCdVc2VyLUFnZW50Jyl9fTtcbiAgICAgICAgICAgIHRoaXMuX3dpbmRvdyA9IHtuYXZpZ2F0b3I6IHt1c2VyQWdlbnQ6ICdmYWtlQWdlbnQnfX0gYXMgV2luZG93O1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5fd2luZG93ID0gd2luZG93O1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgZ2V0IG5hdGl2ZVdpbmRvdygpOiBhbnkge1xuICAgICAgICByZXR1cm4gdGhpcy5fd2luZG93O1xuICAgIH1cbn1cbiIsImltcG9ydCB7IEluamVjdGFibGUsIEluamVjdCwgUExBVEZPUk1fSUQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IGlzUGxhdGZvcm1Ccm93c2VyIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIExvY2FsU3RvcmFnZVdyYXBwZXIge1xuICAgIHByaXZhdGUgbG9jYWxTdG9yYWdlUmVmO1xuXG4gICAgY29uc3RydWN0b3IoQEluamVjdChQTEFURk9STV9JRCkgcGxhdGZvcm1JZCkge1xuICAgICAgICBpZiAoaXNQbGF0Zm9ybUJyb3dzZXIocGxhdGZvcm1JZCkpIHtcbiAgICAgICAgICAgIHRoaXMubG9jYWxTdG9yYWdlUmVmID0gbG9jYWxTdG9yYWdlO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5sb2NhbFN0b3JhZ2VSZWYgPSB7XG4gICAgICAgICAgICBjbGVhcjogKCkgPT4gey8qbm9vcCovfSxcbiAgICAgICAgICAgIGdldEl0ZW06IChrZXk6IHN0cmluZykgPT4gdW5kZWZpbmVkIGFzIHN0cmluZyxcbiAgICAgICAgICAgIGtleTogKGluZGV4OiBudW1iZXIpID0+IHVuZGVmaW5lZCBhcyBzdHJpbmcsXG4gICAgICAgICAgICByZW1vdmVJdGVtOiAoa2V5OiBzdHJpbmcpID0+IHsvKm5vb3AqL30sXG4gICAgICAgICAgICBzZXRJdGVtOiAoa2V5OiBzdHJpbmcsIHZhbHVlOiBzdHJpbmcpID0+IHsvKm5vb3AqL30sXG4gICAgICAgICAgICBsZW5ndGg6IDBcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBnZXQgbG9jYWxTdG9yYWdlKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5sb2NhbFN0b3JhZ2VSZWY7XG4gICAgfVxufVxuIiwiaW1wb3J0IHsgTmdNb2R1bGUsIEluamVjdGlvblRva2VuIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBXaW5kb3dTZXJ2aWNlIH0gZnJvbSAnLi93aW5kb3cuc2VydmljZSc7XG5pbXBvcnQgeyBMb2NhbFN0b3JhZ2VXcmFwcGVyIH0gZnJvbSAnLi9sb2NhbC1zdG9yYWdlLXdyYXBwZXIuc2VydmljZSc7XG5cbmV4cG9ydCBjb25zdCBXSU5ET1cgPSBuZXcgSW5qZWN0aW9uVG9rZW4oJ25nLXRvb2xraXQtd2luZG93Jyk7XG5cbmV4cG9ydCBmdW5jdGlvbiB3aW5kb3dGYWN0b3J5KHdpbmRvd1NlcnZpY2U6IFdpbmRvd1NlcnZpY2UpIHtcbiAgICByZXR1cm4gd2luZG93U2VydmljZS5uYXRpdmVXaW5kb3c7XG59XG5cbmV4cG9ydCBjb25zdCBMT0NBTF9TVE9SQUdFID0gbmV3IEluamVjdGlvblRva2VuKCduZy10b29sa2l0LWxvY2FsLXN0b3JhZ2UnKTtcblxuZXhwb3J0IGZ1bmN0aW9uIGxvY2FsU3RvcmFnZWZhY3RvcnkobG9jYWxTdG9yYWdlV3JhcHBlcjogTG9jYWxTdG9yYWdlV3JhcHBlcikge1xuICAgIHJldHVybiBsb2NhbFN0b3JhZ2VXcmFwcGVyLmxvY2FsU3RvcmFnZTtcbn1cblxuQE5nTW9kdWxlKHtcbiAgICBwcm92aWRlcnM6IFtcbiAgICAgICAgV2luZG93U2VydmljZSxcbiAgICAgICAgeyBwcm92aWRlOiBXSU5ET1csIHVzZUZhY3Rvcnk6IHdpbmRvd0ZhY3RvcnksIGRlcHM6IFtXaW5kb3dTZXJ2aWNlXSB9LFxuICAgICAgICBMb2NhbFN0b3JhZ2VXcmFwcGVyLFxuICAgICAgICB7IHByb3ZpZGU6IExPQ0FMX1NUT1JBR0UsIHVzZUZhY3Rvcnk6IGxvY2FsU3RvcmFnZWZhY3RvcnksIGRlcHM6IFtMb2NhbFN0b3JhZ2VXcmFwcGVyXSB9LFxuICAgIF1cbn0pXG5leHBvcnQgY2xhc3MgTmd0VW5pdmVyc2FsTW9kdWxlIHt9XG4iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7O0lBTUksWUFBaUMsVUFBZTtRQUM1QyxJQUFJLENBQUMsaUJBQWlCLENBQUMsVUFBVSxDQUFDLEVBQUU7OztZQUdoQyxJQUFJLENBQUMsT0FBTyxxQkFBRyxFQUFDLFNBQVMsRUFBRSxFQUFDLFNBQVMsRUFBRSxXQUFXLEVBQUMsRUFBVyxDQUFBLENBQUM7U0FDbEU7YUFBTTtZQUNILElBQUksQ0FBQyxPQUFPLEdBQUcsTUFBTSxDQUFDO1NBQ3pCO0tBQ0o7Ozs7SUFFRCxJQUFJLFlBQVk7UUFDWixPQUFPLElBQUksQ0FBQyxPQUFPLENBQUM7S0FDdkI7OztZQWZKLFVBQVU7Ozs7NENBR00sTUFBTSxTQUFDLFdBQVc7Ozs7Ozs7QUNObkM7Ozs7SUFPSSxZQUFpQyxVQUFVO1FBQ3ZDLElBQUksaUJBQWlCLENBQUMsVUFBVSxDQUFDLEVBQUU7WUFDL0IsSUFBSSxDQUFDLGVBQWUsR0FBRyxZQUFZLENBQUM7U0FDdkM7YUFBTTtZQUNILElBQUksQ0FBQyxlQUFlLEdBQUc7Z0JBQ3ZCLEtBQUssRUFBRTs7aUJBQWdCO2dCQUN2QixPQUFPLEVBQUUsQ0FBQyxHQUFXLHVCQUFLLFNBQW1CLENBQUE7Z0JBQzdDLEdBQUcsRUFBRSxDQUFDLEtBQWEsdUJBQUssU0FBbUIsQ0FBQTtnQkFDM0MsVUFBVSxFQUFFLENBQUMsR0FBVzs7aUJBQWU7Z0JBQ3ZDLE9BQU8sRUFBRSxDQUFDLEdBQVcsRUFBRSxLQUFhOztpQkFBZTtnQkFDbkQsTUFBTSxFQUFFLENBQUM7YUFDUixDQUFDO1NBQ0w7S0FDSjs7OztJQUVELElBQUksWUFBWTtRQUNaLE9BQU8sSUFBSSxDQUFDLGVBQWUsQ0FBQztLQUMvQjs7O1lBckJKLFVBQVU7Ozs7NENBSU0sTUFBTSxTQUFDLFdBQVc7Ozs7Ozs7QUNQbkMsdUJBSWEsTUFBTSxHQUFHLElBQUksY0FBYyxDQUFDLG1CQUFtQixDQUFDLENBQUM7Ozs7O0FBRTlELHVCQUE4QixhQUE0QjtJQUN0RCxPQUFPLGFBQWEsQ0FBQyxZQUFZLENBQUM7Q0FDckM7QUFFRCx1QkFBYSxhQUFhLEdBQUcsSUFBSSxjQUFjLENBQUMsMEJBQTBCLENBQUMsQ0FBQzs7Ozs7QUFFNUUsNkJBQW9DLG1CQUF3QztJQUN4RSxPQUFPLG1CQUFtQixDQUFDLFlBQVksQ0FBQztDQUMzQztBQVVEOzs7WUFSQyxRQUFRLFNBQUM7Z0JBQ04sU0FBUyxFQUFFO29CQUNQLGFBQWE7b0JBQ2IsRUFBRSxPQUFPLEVBQUUsTUFBTSxFQUFFLFVBQVUsRUFBRSxhQUFhLEVBQUUsSUFBSSxFQUFFLENBQUMsYUFBYSxDQUFDLEVBQUU7b0JBQ3JFLG1CQUFtQjtvQkFDbkIsRUFBRSxPQUFPLEVBQUUsYUFBYSxFQUFFLFVBQVUsRUFBRSxtQkFBbUIsRUFBRSxJQUFJLEVBQUUsQ0FBQyxtQkFBbUIsQ0FBQyxFQUFFO2lCQUMzRjthQUNKOzs7Ozs7Ozs7Ozs7Ozs7In0=