{"version":3,"sources":["ng://@ng-toolkit/pwa/ngt-pwa/sw-update-server.mock.service.ts","ng://@ng-toolkit/pwa/ngt-pwa/sw-push-server.mock.service.ts","ng://@ng-toolkit/pwa/ngt-pwa/ngt-pwa-mock.module.ts"],"names":["SwUpdateServerMock","this","available","Subject","activated","isEnabled","prototype","checkForUpdate","Promise","resolve","activateUpdate","SwPushServerMock","requestSubscription","options","console","log","unsubscribe","NgtPwaMockModule","NgModule","args","providers","provide","SwUpdate","useClass","SwPush"],"mappings":"kbAAA,IAAAA,EAAA,WAGA,SAAAA,IACSC,KAAAC,UAA8C,IAAIC,EAAAA,QAClDF,KAAAG,UAA8C,IAAID,EAAAA,QAClDF,KAAAI,WAAqB,EAQ9B,OANSL,EAAAM,UAAAC,eAAP,WACE,OAAO,IAAIC,SAAO,SAAEC,GAAY,OAAAA,QAE3BT,EAAAM,UAAAI,eAAP,WACE,OAAO,IAAIF,SAAO,SAAEC,GAAY,OAAAA,QAEpCT,EAdA,GCEA,IAAAW,EAAA,WAAA,SAAAA,KAYA,OATWA,EAAAL,UAAAM,oBAAP,SAA2BC,GAIvB,OADAC,QAAQC,IAAI,wCAAwCF,GAC7C,IAAIL,SAAO,SAAEC,GAAY,OAAAA,QAE7BE,EAAAL,UAAAU,YAAP,WACI,OAAO,IAAIR,SAAO,SAAEC,GAAY,OAAAA,QAExCE,EAZA,GCFA,IAAAM,EAAA,WAMA,SAAAA,KAM+B,2BAN9BC,EAAAA,SAAQC,KAAA,CAAC,CACNC,UAAW,CACP,CAACC,QAASC,EAAAA,SAAUC,SAAUvB,GAC9B,CAACqB,QAASG,EAAAA,OAAQD,SAAUZ,QAGLM,EAZ/B","sourcesContent":["import { Observable, Subject } from 'rxjs';\nimport { UpdateAvailableEvent, UpdateActivatedEvent } from '@angular/service-worker';\n\nexport class SwUpdateServerMock {\n  public available: Observable<UpdateAvailableEvent> = new Subject<UpdateAvailableEvent>();\n  public activated: Observable<UpdateActivatedEvent> = new Subject<UpdateActivatedEvent>();\n  public isEnabled: boolean = false;\n\n  public checkForUpdate(): Promise<void> {\n    return new Promise((resolve) => resolve());\n  }\n  public activateUpdate(): Promise<void> {\n    return new Promise((resolve) => resolve());\n  }\n}\n","import { Observable } from 'rxjs';\n\nexport class SwPushServerMock {\n    public messages: Observable<object>;\n    public subscription: Observable<PushSubscription | null>;\n    public requestSubscription(options: {\n        serverPublicKey: string;\n    }): Promise<PushSubscription> {\n        console.log(`requested subscription with options: ${options}`);\n        return new Promise((resolve) => resolve());\n    }\n    public unsubscribe(): Promise<void> {\n        return new Promise((resolve) => resolve());\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { SwPush, SwUpdate } from '@angular/service-worker';\nimport { SwUpdateServerMock } from './sw-update-server.mock.service';\nimport { SwPushServerMock } from './sw-push-server.mock.service';\n\n\n@NgModule({\n    providers: [\n        {provide: SwUpdate, useClass: SwUpdateServerMock },\n        {provide: SwPush, useClass: SwPushServerMock }\n    ]\n})\nexport class NgtPwaMockModule {}\n"]}